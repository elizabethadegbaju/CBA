@model ManageRoleUsersViewModel

@{
    ViewData["Title"] = $"Details for {Model.Role.Name} Role";
}
<h1>@ViewData["Title"]</h1>

<div>
    <h4>Role</h4>
    <hr />
    <dl class="row">
        <dt class="col s2">
            @Html.DisplayNameFor(model => model.Role.Name)
        </dt>
        <dd class="col s10">
            @Html.DisplayFor(model => model.Role.Name)
        </dd>
        <dt class="col s2">
            @Html.DisplayNameFor(model => model.Role.IsEnabled)
        </dt>
        <dd class="col s10">
            <form class="inline">
                <div class="switch">
                    <label>
                        Disabled
                        <input disabled asp-for="@Model.Role.IsEnabled" type="checkbox">
                        <span class="lever"></span>
                        Enabled
                    </label>
                </div>
            </form>
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Role.Id">Edit</a> |
    <a asp-action="Delete" asp-route-id="@Model.Role.Id">Delete</a> |
    <a asp-controller="Permission" asp-action="Index" asp-route-roleId="@Model.Role.Id">Manage Permissions</a> |
    <a asp-action="Index">Back to Roles</a>
</div>
<br />

@if (Model.RoleUsers.Any(roleUser => roleUser.IsAuthorized == true))
{
    <ul class="collection with-header">
        <li class="collection-header"><h4>Authorized Users</h4></li>
        @{
            var roleUsers = Model.RoleUsers.Where(roleUser => roleUser.IsAuthorized == true).ToList();
            for (int i = 0; i < roleUsers.Count(); i++)
            {

                <li class="collection-item">@roleUsers[i].User.Email</li>
            }
        }
    </ul>
}
else
{
    <h5 class="card-title">No Users found with @Model.Role.Name Role</h5>
}